---
openapi: 3.1.0
paths:
  "/api/broadcasts":
    get:
      summary: list broadcasts
      tags:
      - Broadcasts
      security:
      - basic_auth: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                default:
                  value:
                  - id: 2
                    subject: A subject line 2
                    content: "<div>Wowza!</div>"
                    created_at: '2024-01-02T00:00:00.000Z'
                  - id: 1
                    subject: A subject line
                    content: "<div>wow</div>"
                    created_at: '2024-01-01T00:00:00.000Z'
    post:
      summary: create broadcast
      security:
      - basic_auth: []
      tags:
      - Broadcasts
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 3
                    subject: A subject line 3
                    content: "<div>Created with the API!</div>"
                    created_at: '2024-01-03T00:00:00.000Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                content:
                  type: string
              required:
              - subject
              - content
            examples:
              default:
                summary: default
                value:
                  subject: A subject line 3
                  content: "<div>Created with the API!</div>"
  "/api/broadcasts/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    get:
      summary: show broadcast
      security:
      - basic_auth: []
      tags:
      - Broadcasts
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 3
                    subject: A subject line 3
                    content: "<div>Created with the API!</div>"
                    created_at: '2024-01-03T00:00:00.000Z'
    delete:
      summary: delete broadcast
      security:
      - basic_auth: []
      tags:
      - Broadcasts
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                  - 1
                  - 2
  "/api/members":
    get:
      summary: list members
      security:
      - basic_auth: []
      tags:
      - Members
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                default:
                  value:
                  - username: fionahu
                    name: Fionah United
                    email: fionahu@obl.ong
                    pronouns: they/them
                    auxillary:
                      custom_field: data
                    banned: false
                    expired: false
                    status: active
                    created_at: '2024-01-01T00:00:00.000Z'
                    expires_at: '2025-01-01T00:00:00.000Z'
                  - username: steveu
                    name: Kai United
                    email: kaiu@obl.ong
                    pronouns: they/them
                    auxillary:
                      custom_field: data
                    banned: false
                    expired: false
                    status: active
                    created_at: '2024-01-02T00:00:00.000Z'
                    expires_at: '2025-01-02T00:00:00.000Z'
    post:
      summary: create member
      security:
      - basic_auth: []
      tags:
      - Members
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                default:
                  value:
                    username: fionahu
                    name: Fionah United
                    email: fionahu@obl.ong
                    pronouns: they/them
                    auxillary:
                      custom_field: data
                    banned: false
                    expired: false
                    status: active
                    created_at: '2024-01-01T00:00:00.000Z'
                    expires_at: '2025-01-01T00:00:00.000Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                email:
                  type: string
                pronouns:
                  type: string
                auxillary:
                  type: object
                  description: Unstructured custom fields
                banned:
                  type: boolean
                  default: 'false'
                expires_at:
                  type: string
                  description: ISO8601, times in UTC
              required:
              - username
              - email
            examples:
              default:
                summary: default
                value:
                  username: fionahu
                  name: Fionah United
                  email: fionahu@obl.ong
                  pronouns: they/them
                  auxillary:
                    custom_field: data
                  banned: false
                  expires_at: '2025-01-01T00:00:00.000Z'
  "/api/members/{username}":
    parameters:
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    get:
      summary: show member
      security:
      - basic_auth: []
      tags:
      - Members
      parameters:
      - name: username
        in: path
        description: username
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    username: fionahu
                    name: Fionah United
                    email: fionahu@obl.ong
                    pronouns: they/them
                    auxillary:
                      custom_field: data
                    banned: false
                    expired: false
                    status: active
                    created_at: '2024-01-01T00:00:00.000Z'
                    expires_at: '2025-01-01T00:00:00.000Z'
    patch:
      summary: update or create member
      security:
      - basic_auth: []
      tags:
      - Members
      parameters:
      - name: username
        in: path
        description: username
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                default:
                  value:
                    username: fionahu
                    name: Fionah United
                    email: fionahu@obl.ong
                    pronouns: they/them
                    auxillary:
                      custom_field: data
                    banned: true
                    expired: false
                    status: active
                    created_at: '2024-01-01T00:00:00.000Z'
                    expires_at: '2025-01-01T00:00:00.000Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                email:
                  type: string
                pronouns:
                  type: string
                auxillary:
                  type: object
                  description: Unstructured custom fields
                banned:
                  type: boolean
                  default: 'false'
                expires_at:
                  type: string
                  description: ISO8601, times in UTC
              required:
              - username
              - email
            examples:
              ban member:
                summary: ban member
                value:
                  banned: true
    delete:
      summary: delete member
      security:
      - basic_auth: []
      tags:
      - Members
      parameters:
      - name: username
        in: path
        description: username
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                default:
                  value:
                  - steveu
                  summary: default
                  description: Array of all member usernames after deletion
info:
  title: United API
  version: 0.0.1
components:
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
      description: |-
        Use **ID** as username & **key** as password

        You can create new API keys on the [API Keys](/api_keys) page
servers:
- url: https://{united_host}
  variables:
    united_host:
      default: your.united.instance.obl.ong
