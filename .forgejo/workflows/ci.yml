name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: https://github.com/ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in Ruby dependencies
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: https://github.com/ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: https://github.com/ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/bundle exec standardrb --fix --format github
  # Tests don't run properly
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Install packages
  #       run: sudo apt-get update && sudo apt-get install --no-install-recommends -y chromium-browser curl libjemalloc2 libvips postgresql-client libpq-dev

  #     - name: Install CodeClimate Test Reporter
  #       run: sudo wget -O /bin/codeclimate https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 && sudo chmod +x /bin/codeclimate

  #     - name: Pending test
  #       env:
  #         CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  #       run: codeclimate before-build

  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Ruby
  #       uses: https://github.com/ruby/setup-ruby@v1
  #       with:
  #         ruby-version: .ruby-version
  #         bundler-cache: true

  #     - name: Run tests
  #       env:
  #         RAILS_ENV: test
  #         CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  #       run: bin/rails db:setup spec
      
  #     - name: After test
  #       env:
  #         CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  #       run: codeclimate after-build

      # Forgejo doesn't suppport upload-artifact
      #
      # - name: Keep screenshots from failed system tests
      #   uses: actions/upload-artifact@v4
      #   if: failure()
      #   with:
      #     name: screenshots
      #     path: ${{ github.workspace }}/tmp/capybara
      #     if-no-files-found: ignore
